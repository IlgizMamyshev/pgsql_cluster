---
# yamllint disable rule:line-length

- block:
    # Autoload module when OS starts
    # sudo sh -c 'echo "softdog" >> /etc/modules'
    # Insert string if the string does not exist in the file.
    - name: Patroni Watchdog | Set softdog autoload
      shell:
        cmd: |
          SEARCHSTRING="softdog"; FILENAME="/etc/modules"; if [[ "" == "$(grep -Fx "$SEARCHSTRING" $FILENAME)" ]]; then echo $SEARCHSTRING >> $FILENAME; fi;
      args:
        warn: true
      changed_when: false

    # Setup rights for postgres account (Patroni starts under that account)
    # sudo sh -c 'echo "KERNEL==\"watchdog\", OWNER=\"postgres\", GROUP=\"postgres\"" >> /etc/udev/rules.d/61-watchdog.rules'
    # Insert string if the file does not exist or string does not exist in the file.
    - name: Patroni Watchdog | Set softdog autoload (setup rights)
      shell:
        cmd: |
          SEARCHSTRING="KERNEL==\"watchdog\", OWNER=\"postgres\", GROUP=\"postgres\""; FILENAME="/etc/udev/rules.d/61-watchdog.rules"; if [[ ! -f "$FILENAME" ]] || [[ "" == "$(grep -Fx "$SEARCHSTRING" $FILENAME)" ]]; then echo $SEARCHSTRING >> $FILENAME; fi;
      args:
        warn: true
      changed_when: false

    # Remove module from blacklist (if present)
    - name: Patroni Watchdog | Remove module softdog from blacklist (if present)
      shell:
        cmd: |
          MODNAME="softdog"; FILENAME=$(grep blacklist /lib/modprobe.d/* /etc/modprobe.d/* | grep $MODNAME | awk -F ':' '{print $1}'); if [[ "" != "$(modprobe --showconfig | grep blacklist | grep $MODNAME)" ]]; then sed --in-place "s/blacklist $MODNAME/#blacklist $MODNAME/g" $FILENAME; fi;
      args:
        warn: true
      changed_when: false

    - name: Patroni Watchdog | Load softdog module now
      command: modprobe softdog
      args:
        warn: true
      register: out
      failed_when: out.rc > 0 # num strings in out.stdout
      changed_when: false

    # Softdog is running?
    - name: Patroni Watchdog | Check that the softdog is running
      command: lsmod | grep softdog
      register: out
      failed_when: out.rc != 1 # check one string in out.stdout
      changed_when: false

    #sudo chown postgres /dev/watchdog
    - name: Patroni Watchdog | Change ownership for /dev/watchdog
      file:
        path: /dev/watchdog
        #state: directory
        owner: postgres
        group: postgres
        mode: '0644'
      changed_when: false

  #when: ansible_os_family == "Debian"
  ignore_errors: false

# Check watchdog in log: sudo dmesg | grep dog

...

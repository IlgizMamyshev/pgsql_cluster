---
# yamllint disable rule:line-length
# yamllint disable rule:comments-indentation

- name: Make sure handlers are flushed immediately
  meta: flush_handlers

# Install packages from repository
# Debian
- name: Install system packages
  apt:
    name: "{{ item }}"
    state: latest
  loop: "{{ system_packages }}"
  environment: "{{ proxy_env | default({}) }}"
  when: ansible_os_family == "Debian"
  tags: install_packages

# pip install
- import_tasks: ../patroni/tasks/pip.yml
  when: patroni_installation_method == "pip"
  tags: patroni, patroni_install, pip

# Patroni install
- block:  # patroni_installation_method: "pip"
    - name: Copy patroni requirements.txt file
      copy:
        src: requirements.txt
        dest: /tmp/requirements.txt
      when: patroni_pip_requirements_repo | length < 1

    - name: Install setuptools
      pip:
        name: setuptools
        state: latest
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
      when: patroni_pip_requirements_repo | length < 1

    - name: Install requirements
      pip:
        requirements: /tmp/requirements.txt
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
      when: patroni_pip_requirements_repo | length < 1

    - name: Install patroni[raft]
      pip:
        name: patroni[raft]
        state: latest
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
      when: patroni_pip_package_repo | length < 1 and patroni_install_version == "latest"

    - name: "Install patroni {{ patroni_install_version }}"
      pip:
        name: "patroni=={{ patroni_install_version }}"
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
      when: patroni_pip_package_repo | length < 1 and patroni_install_version != "latest"
  when: patroni_installation_method == "pip"
  environment: "{{ proxy_env | default({}) }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tags: patroni, patroni_install

- block:  # when "patroni_pip_requirements_repo" and "patroni_pip_package_repo" is defined
    - name: Download patroni requirements
      get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 120
        validate_certs: false
      loop: "{{ patroni_pip_requirements_repo }}"
      when: patroni_pip_requirements_repo | length > 0

    - name: Download patroni package
      get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      loop: "{{ patroni_pip_package_repo | list }}"
      when: patroni_pip_package_repo | length > 0

    - name: Install requirements
      pip:
        name: "file:///tmp/{{ item }}"
        executable: pip3
        extra_args: "--no-index --find-links=file:///tmp --ignore-installed"
        umask: "0022"
      loop: "{{ patroni_pip_requirements_repo | map('basename') | list }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
      when: patroni_pip_requirements_repo | length > 0

    - name: Install patroni
      pip:
        name: "file:///tmp/{{ item }}"
        executable: pip3
        extra_args: "--no-index --find-links=file:///tmp --ignore-installed"
        umask: "0022"
      loop: "{{ patroni_pip_package_repo | map('basename') | list }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
      when: patroni_pip_package_repo | length > 0
  when: patroni_installation_method == "pip"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tags: patroni, patroni_install

- block:  # patroni_installation_method: "rpm/deb"
    # Debian
    - name: Install patroni package
      package:
        name: patroni
        state: present
      when: ansible_os_family == "Debian" and patroni_deb_package_repo | length < 1

    # RedHat
    - name: Install patroni package
      package:
        name: patroni
        state: present
      when: ansible_os_family == "RedHat" and patroni_rpm_package_repo | length < 1

    # when patroni_deb_package_repo or patroni_rpm_package_repo URL is defined
    # Debian
    - name: Download patroni deb package
      get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      loop: "{{ patroni_deb_package_repo | list }}"
      when: ansible_os_family == "Debian" and patroni_deb_package_repo | length > 0

    - name: Install patroni from deb package
      apt:
        force_apt_get: true
        deb: "/tmp/{{ item }}"
        state: present
      loop: "{{ patroni_deb_package_repo | map('basename') | list }}"
      when: ansible_os_family == "Debian" and patroni_deb_package_repo | length > 0

    # RedHat
    - name: Download patroni rpm package
      get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      loop: "{{ patroni_rpm_package_repo | list }}"
      when: ansible_os_family == "RedHat" and patroni_rpm_package_repo | length > 0

    - name: Install patroni from rpm package
      package:
        name: "/tmp/{{ item }}"
        state: present
      loop: "{{ patroni_rpm_package_repo | map('basename') | list }}"
      when: ansible_os_family == "RedHat" and patroni_rpm_package_repo | length > 0
  environment: "{{ proxy_env | default({}) }}"
  when: (patroni_installation_method == "rpm" or patroni_installation_method == "deb")
  tags: patroni, patroni_install

# Patroni RAFT Controller configure
- name: Create Patroni conf directory
  file:
    path: "/etc/patroni"
    owner: postgres
    group: postgres
    state: directory
    mode: 0750
  tags: patroni, patroni_conf

- name: Create Patroni RAFT data directory
  file:
    path: "{{ patroni_raft_data_dir }}"
    owner: postgres
    group: postgres
    state: directory
    mode: 0750
  tags: patroni, patroni_conf, patroni_raft_conf

- name: Generate conf file "/etc/patroni/patroni_raft_controller.yml" for Patroni RAFT controller
  template:
    src: templates/patroni_raft_controller.yml.j2
    dest: /etc/patroni/patroni_raft_controller.yml
    owner: postgres
    group: postgres
    mode: 0640
  tags: patroni, patroni_conf, patroni_raft_conf

- name: Copy systemd service file "/etc/systemd/system/patroni_raft_controller.service"
  template:
    src: templates/patroni_raft_controller.service.j2
    dest: /etc/systemd/system/patroni_raft_controller.service
    owner: postgres
    group: postgres
    mode: 0644
  tags: patroni, patroni_conf, patroni_raft_service

- name: Start Patroni RAFT Controller service
  systemd:
    daemon_reload: true
    name: patroni_raft_controller
    state: restarted
    enabled: true

- name: Wait for Patroni RAFT Controller port to become open on the host
  wait_for:
    port: "{{ patroni_raft_controller.port }}"
    host: "{{ hostvars[inventory_hostname]['inventory_hostname'] }}"
    state: started
    timeout: 240
    delay: 10
  ignore_errors: false

...

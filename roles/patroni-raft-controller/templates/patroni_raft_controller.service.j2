[Unit]
Description=Patroni RAFT Controller
After=syslog.target network.target
 
[Service]
Type=simple
 
User=postgres
Group=postgres

# Read in configuration file if it exists, otherwise proceed
EnvironmentFile=-/etc/patroni_env.conf

# WorkingDirectory=~
 
# Where to send early-startup messages from the server
# This is normally controlled by the global default set by systemd
# StandardOutput=syslog

# Pre-commands to start watchdog device
{% if patroni_with_watchdog|bool %}
ExecStartPre=-/usr/bin/sudo /sbin/modprobe softdog
ExecStartPre=-/usr/bin/sudo /bin/chown postgres /dev/watchdog
{% endif %}

# Start the patroni_raft_controller process
{% if patroni_installation_method == 'pip' %}
ExecStart=/usr/local/bin/patroni_raft_controller /etc/patroni/patroni_raft_controller.yml
{% else %}
ExecStart=/usr/bin/patroni_raft_controller /etc/patroni/patroni_raft_controller.yml
{% endif %}

# Send HUP to reload from patroni_raft_controller.yml
ExecReload=/bin/kill -s HUP $MAINPID
 
# only kill the patroni_raft_controller process, not it's children, so it will gracefully stop postgres
KillMode=process
 
# Give a reasonable amount of time for the server to start up/shut down
TimeoutSec=60
 
# Restart the service if it crashed
Restart=on-failure
 
[Install]
WantedBy=multi-user.target
